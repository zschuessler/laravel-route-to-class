<?php

namespace Zschuessler\RouteToClass;

use Illuminate\Support\Facades\View;
use Zschuessler\RouteToClass\RouteToClass;

class ServiceProvider extends \Illuminate\Support\ServiceProvider
{
    /**
     * Register the service provider.
     */
    public function register()
    {
        // Configs
        $this->publishes([
            __DIR__.'/config/route2class.php' => config_path('route2class.php')
        ]);
        $this->mergeConfigFrom(
            __DIR__.'/config/route2class.php',
            'route2class'
        );

        // Create app singleton
        $this->app->singleton('route2class', function () {
            return new RouteToClass();
        });

        // Facade
        $loader = \Illuminate\Foundation\AliasLoader::getInstance();
        $loader->alias('Route2Class', \Zschuessler\RouteToClass\Facade::class);
    }
    /**
     * Bootstrap the application services.
     *
     * Creates a view composer for all views.
     * Assigns the variable `route_body_classes` to each view.
     *
     * @return void
     */
    public function boot()
    {
        /**
         * Register Blade Directive
         *
         * Using @route2class_generate_classes will output the class string generated by
         * \Route2Class::generateClassString()
         *
         * If you want to ensure your classes are never cached from Blade (ie: testing), instead use the facade to
         * print your classes:
         * `\Route2Class::generateClassString()`
         */
        \Blade::directive('route2class_generate_classes', function () {
            return \Route2Class::generateClassString();
        });
    }
}
